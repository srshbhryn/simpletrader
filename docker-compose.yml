version: '3.8'

services:
  # autoheal:
  #   restart: always
  #   image: willfarrell/autoheal
  #   environment:
  #     - AUTOHEAL_CONTAINER_LABEL=all
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

  bookwatch_image:
    build:
      context: ./bookwatch
      dockerfile: Dockerfile.bookwatch_image
    image: bookwatch_image

  bookwatch:
    image: bookwatch_image
    command: "python main.py"
    environment:
      - ENV=PROD
      - CONFIG_DIR=/sharedconfs/
    restart: always
    volumes:
      - ./configs/shared/:/sharedconfs/
    depends_on:
      - bookwatch_redis

  journal_redis:
    image: redis:7.0.4-alpine
    restart: always

  cache_redis:
    image: redis:7.0.4-alpine
    restart: always

  celery_redis:
    image: redis:7.0.4-alpine
    restart: always

  bookwatch_redis:
    image: redis:7.0.4-alpine
    restart: always

  goapp_base_image:
    build:
      context: ./goapp
      dockerfile: Dockerfile.base_image
    image: goapp_base_image

  bot0_image:
    build:
      context: ./goapp
      dockerfile: Dockerfile.bot0_image
    image: bot0_image

  bot0:
    image: bot0_image
    command: "./bot0"
    # environment:
    #   - BOOKWATCH_REDIS=
    #   - CELERY_REDIS=
    #   - CONFIG_DIR=/sharedconfs/
    # restart: always
    # volumes:
    #   - ./configs/shared/:/sharedconfs/
    # depends_on:
    #   - bookwatch_redis

  analysisdb:
    image: timescale/timescaledb:latest-pg14
    restart: always
    environment:
      - POSTGRES_USER=analysisdb
      - POSTGRES_PASSWORD=analysisdb
      - POSTGRES_DB=analysisdb
    volumes:
      - analysisdb_data:/var/lib/postgresql/data/

  analysis__image:
    build:
      context: ./analysis
      dockerfile: Dockerfile
    image: analysis__image

  analysis__run_collector:
    image: analysis__image
    command: "./entrypoint.run_collectors.sh"
    restart: always
    environment:
      - DEBUG=0
    depends_on:
      - journal_redis
      - analysisdb


volumes:
  analysisdb_data:
